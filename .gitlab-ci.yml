stages:        # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy
  - prod

variables:
  GIT_CHECKOUT: "true"
  SCAN_ANNOTATE_PR: "true"
  ENABLE_OSS_RISK: "true"

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  image: docker/compose
    # name: 
    # entrypoint: [""]

  services:
    - docker:dind

  script:
    - docker-compose -v
    - echo "Compiling the code..."
    - whoami
    - pwd
    - ls -l
    - cd SIEM
    - docker-compose -f build-from-sources.yml up -d
    - echo "Compile complete."
  tags:
    - shell

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - sleep 6
    - echo "Code coverage is 90%"
  tags:
    - shell

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 3
    - echo "No lint issues found."
  tags:
    - shell

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
  tags:
    - shell
    
prod-job:
  stage: prod
  script:
    - echo "Production"
  tags:
    - shell
